<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- This program is free software; you can redistribute it and/or      -->
<!-- modify it under the terms of the GNU General Public License as     -->
<!-- published by the Free Software Foundation; either version 2 of the -->
<!-- License, or (at your option) any later version.                    -->
<!--                                                                    -->
<!-- This program is distributed in the hope that it will be useful,    -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of     -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      -->
<!-- GNU General Public License for more details.                       -->
<!--                                                                    -->
<!-- You should have received a copy of the GNU General Public License  -->
<!-- along with this program; if not, write to the                      -->
<!-- Free Software Foundation, Inc.,                                    -->
<!-- 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA             -->
<!--                                                                    -->
<!--                 Sipp default 'uas' scenario.                       -->
<!--                                                                    -->

<scenario name="Basic UAS responder">
  <!-- By adding rrs="true" (Record Route Sets), the route sets         -->
  <!-- are saved and used for following messages sent. Useful to test   -->
  <!-- against stateful SIP proxies/B2BUAs.                             -->

<label id="5"/>
 
  <recv request="INVITE">
  </recv>

<send>
  <![CDATA[

    SIP/2.0 100 Trying
    [last_Via:]
    [last_From:]
    [last_To:];tag=[call_number]
    [last_Call-ID:]
    [last_CSeq:]
    Contact: <sip:[local_ip]:[local_port];transport=[transport]>
    Content-Length: 0

  ]]>
</send>

<pause milliseconds="200"/>

<send>
  <![CDATA[

    SIP/2.0 180 Ringing
    [last_Via:]
    [last_From:]
    [last_To:];tag=[call_number]
    [last_Call-ID:]
    [last_CSeq:]
    Contact: <sip:[local_ip]:[local_port];transport=[transport]>
    Content-Length: [len]
    Content-Type: multipart/mixed;boundary=testing
    MIME-Version: 1.0

    --testing
    Content-Disposition: signal; handling=required
    Content-Type: application/isup; version=ansi88; base=ansi88

    \x06\x16\x24\x00
    --testing--

  ]]>
</send>

<pause milliseconds="200" />

<send retrans="500">
  <![CDATA[

   SIP/2.0 200 OK
   [last_Via:]
   [last_From:]
   [last_To:];tag=[call_number]
   [last_Call-ID:]
   [last_CSeq:]
   Accept: application/sdp, application/isup, application/dtmf, application/dtmf-relay,  multipart/mixed
   Contact: <sip:[local_ip]:[local_port];transport=[transport]>
   Allow: INVITE,ACK,CANCEL,BYE,REGISTER,REFER,INFO,SUBSCRIBE,NOTIFY,PRACK,UPDATE,OPTIONS
   Content-Length: [len]
   Content-Type: multipart/mixed; boundary=testing
   MIME-Version: 1.0

   --testing
   Content-Disposition: session; handling=required
   Content-Type: application/sdp

   v=0
   o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
   s=-
   c=IN IP[media_ip_type] [media_ip]
   t=0 0
   m=audio [media_port] RTP/AVP 18
   a=rtpmap:18 G729/8000
   a=fmtp:18 annexb=no


   --testing
   Content-Type: application/isup; version=ansi88; base=ansi88
   Content-Disposition: signal; handling=required

   \x09\x01\x11\x02\x12\x24\x29\x01\x01\x00
   --testing--

   ]]>
</send>

<recv request="ACK"
      rtd="true"
      crlf="true">
</recv>


<recv request="BYE">
</recv>

<send>
  <![CDATA[

   SIP/2.0 200 OK
   [last_Via:]
   [last_From:]
   [last_To:]
   [last_Call-ID:]
   [last_CSeq:]
   Contact: <sip:[local_ip]:[local_port];transport=[transport]>
   Content-Length: [len]
   Content-Type: multipart/mixed;boundary=testing
   MIME-Version: 1.0

   --testing
   Content-Disposition: signal; handling=required
   Content-Type: application/isup; version=ansi88; base=ansi88

   \x10
   --testing--


   ]]>
</send>


  <!-- Keep the call open for a while in case the 200 is lost to be     -->
  <!-- able to retransmit it if we receive the BYE again.               -->
  <pause milliseconds="4000""/>


  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10000, 20000, 30000, 40000, 50000, 100000, 150000, 200000"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10000, 50000, 100000, 500000, 1000000, 5000000, 10000000"/>

</scenario>

